<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SpaceW.Core.Threading</name>
    </assembly>
    <members>
        <member name="T:SpaceEngine.Core.Threading.Scheduling.IScheduler">
            <summary>
                scheduler interface
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Threading.Scheduling.IScheduler.ScheduledTasks">
            <summary>
                Returns > 0 if the scheduler has tasks scheduled.
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Threading.Scheduling.IScheduler.RunningTasks">
            <summary>
                Returns > 0 if the scheduler has tasks running.
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Threading.Scheduling.IScheduler.WaitingTasks">
            <summary>
                Returns > 0 if the scheduler has tasks waiting.
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Threading.Scheduling.IScheduler.FinishingTasks">
            <summary>
                Returns > 0 if the scheduler has tasks finishing.
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Threading.Scheduling.IScheduler.Tasks">
            <summary>
                Returns > 0 if the scheduler has tasks.
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Threading.Scheduling.IScheduler.HasTasks">
            <summary>
                Returns true if the scheduler has
                tasks to run or if there are tasks running.
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Threading.Scheduling.IScheduler.Cancel(SpaceEngine.Core.Threading.Tasks.IThreadedTask)">
            <summary>
                Cancel a task. Task will have its cancel function called
                if it is cancelled. Tasks that are already running or
                finishing can not be cancelled.
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Threading.Scheduling.IScheduler.Contains(SpaceEngine.Core.Threading.Tasks.IThreadedTask)">
            <summary>
                Does the scheduler contain the task in any of
                its queues.
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Threading.Scheduling.IScheduler.IsScheduled(SpaceEngine.Core.Threading.Tasks.IThreadedTask)">
            <summary>
                Returns true if the tasks has been added to
                the scheduler and has not been run.
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Threading.Scheduling.IScheduler.IsRunning(SpaceEngine.Core.Threading.Tasks.IThreadedTask)">
            <summary>
                Returns true if the tasks has been added to
                the scheduler and is running.
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Threading.Scheduling.IScheduler.IsWaiting(SpaceEngine.Core.Threading.Tasks.IThreadedTask)">
            <summary>
                Returns true if the tasks has been added to
                the scheduler and is waiting.
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Threading.Scheduling.IScheduler.IsFinishing(SpaceEngine.Core.Threading.Tasks.IThreadedTask)">
            <summary>
                Returns true if the tasks has been added to
                the scheduler and is finishing.
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Threading.Scheduling.IScheduler.Add(SpaceEngine.Core.Threading.Tasks.IThreadedTask)">
            <summary>
                Add a task to scheduler. The task will be queued and
                will be run when it reaches the front of queue.
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Threading.Scheduling.IScheduler.Run(SpaceEngine.Core.Threading.Tasks.IThreadedTask)">
            <summary>
                Add a task to scheduler and run immediately.
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Threading.Scheduling.IScheduler.AddWaiting(SpaceEngine.Core.Threading.Tasks.IThreadedTask)">
            <summary>
                Adds a task to the waiting queue. A task will stop
                waiting on some predefined event like another task
                finishing.
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Threading.Scheduling.IScheduler.StopWaiting(SpaceEngine.Core.Threading.Tasks.IThreadedTask,System.Boolean)">
            <summary>
                Removes a task from the waiting queue and
                adds it to the scheduled queue were it will be run.
            </summary>
        </member>
        <member name="T:SpaceEngine.Core.Threading.Scheduling.Scheduler">
            <summary>
                Scheduler.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Threading.Scheduling.Scheduler.Lock">
            <summary>
                Lock for functions that maybe accessed by task running on another thread.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Threading.Scheduling.Scheduler.m_coroutine">
            <summary>
                Used to run coroutine tasks.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Threading.Scheduling.Scheduler.m_exception">
            <summary>
                A a exception thrown by a running task to be rethrown by the schedular
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Threading.Scheduling.Scheduler.m_finishedTasks">
            <summary>
                The queue of tasks that have finished and need to be clean up.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Threading.Scheduling.Scheduler.m_haveRan">
            <summary>
                Temporary list hold tasks that have ran.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Threading.Scheduling.Scheduler.m_runningTasks">
            <summary>
                The list of tasks currently running.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Threading.Scheduling.Scheduler.m_scheduledTasks">
            <summary>
                The queue of tasks that need to be run.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Threading.Scheduling.Scheduler.m_waitingTasks">
            <summary>
                The list of task currently waiting.
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Threading.Scheduling.Scheduler.TasksRanThisUpdate">
            <summary>
                How many tasks were ran this update.
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Threading.Scheduling.Scheduler.TasksFinishedThisUpdate">
            <summary>
                How many task were finished this update.
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Threading.Scheduling.Scheduler.MaxTasksPerUpdate">
            <summary>
                Max tasks that will be ran per update.
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Threading.Scheduling.Scheduler.MaxFinishPerUpdate">
            <summary>
                Max tasks to run per update.
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Threading.Scheduling.Scheduler.MaxWaitTime">
            <summary>
                The maximum time (ms) to wait when cancelling tasks.
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Threading.Scheduling.Scheduler.MinWaitTime">
            <summary>
                The minimum time (ms) to wait when cancelling tasks.
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Threading.Scheduling.Scheduler.DisableMultithreading">
            <summary>
                Disable multithreading.
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Threading.Scheduling.Scheduler.ShutingDown">
            <summary>
                Is the scheduler shunting down.
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Threading.Scheduling.Scheduler.HasTasks">
            <summary>
                Returns true if the scheduler has
                tasks to run or if there are tasks running.
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Threading.Scheduling.Scheduler.ScheduledTasks">
            <summary>
                Returns > 0 if the scheduler has tasks scheduled.
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Threading.Scheduling.Scheduler.RunningTasks">
            <summary>
                Returns > 0 if the scheduler has tasks running.
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Threading.Scheduling.Scheduler.WaitingTasks">
            <summary>
                Returns > 0 if the scheduler has tasks waiting.
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Threading.Scheduling.Scheduler.FinishingTasks">
            <summary>
                Returns > 0 if the scheduler has tasks finishing.
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Threading.Scheduling.Scheduler.Tasks">
            <summary>
                Returns > 0 if the scheduler has tasks.
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Threading.Scheduling.Scheduler.Update">
            <summary>
                Update Scheduler.
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Threading.Scheduling.Scheduler.RunTask(SpaceEngine.Core.Threading.Tasks.IThreadedTask)">
            <summary>
                Runs next task.
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Threading.Scheduling.Scheduler.RunThreaded(System.Object)">
            <summary>
                Runs a threaded task
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Threading.Scheduling.Scheduler.FinishTasks">
            <summary>
                Finish all tasks in the finished list
                by calling there end function and removing
                the from the running list.
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Threading.Scheduling.Scheduler.Cancel(SpaceEngine.Core.Threading.Tasks.IThreadedTask)">
            <summary>
                Cancel a task. Task will have its cancel function called
                if it is cancelled. Tasks that are already running or
                finishing can not be cancelled.
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Threading.Scheduling.Scheduler.CancelAllTasks">
            <summary>
                Cancels all the tasks in the scheduler.
                Running task have there cancel function called.
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Threading.Scheduling.Scheduler.Contains(SpaceEngine.Core.Threading.Tasks.IThreadedTask)">
            <summary>
                Does the scheduler contain the task in any of
                its queues.
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Threading.Scheduling.Scheduler.IsScheduled(SpaceEngine.Core.Threading.Tasks.IThreadedTask)">
            <summary>
                Returns true if the tasks has been added to
                the scheduler and has not been run.
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Threading.Scheduling.Scheduler.IsRunning(SpaceEngine.Core.Threading.Tasks.IThreadedTask)">
            <summary>
                Returns true if the tasks has been added to
                the scheduler and is running.
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Threading.Scheduling.Scheduler.IsWaiting(SpaceEngine.Core.Threading.Tasks.IThreadedTask)">
            <summary>
                Returns true if the tasks has been added to
                the scheduler and is waiting.
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Threading.Scheduling.Scheduler.IsFinishing(SpaceEngine.Core.Threading.Tasks.IThreadedTask)">
            <summary>
                Returns true if the tasks has been added to
                the scheduler and is finishing.
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Threading.Scheduling.Scheduler.Add(SpaceEngine.Core.Threading.Tasks.IThreadedTask)">
            <summary>
                Add a task to scheduler. The task will be queued and
                will be run when it reaches the front of queue.
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Threading.Scheduling.Scheduler.Run(SpaceEngine.Core.Threading.Tasks.IThreadedTask)">
            <summary>
                Add a task to scheduler and run immediately.
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Threading.Scheduling.Scheduler.AddWaiting(SpaceEngine.Core.Threading.Tasks.IThreadedTask)">
            <summary>
                Adds a task to the waiting queue. A task will stop
                waiting on some predefined event like another task
                finishing.
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Threading.Scheduling.Scheduler.Finished(SpaceEngine.Core.Threading.Tasks.IThreadedTask)">
            <summary>
                If a task is not running on the main thread or uses a
                coroutine it needs to tell the scheduler when it is finished.
                The task will then be cleaned up and have its end function called.
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Threading.Scheduling.Scheduler.CheckForException">
            <summary>
                Checks to see if a tasks has thrown a exception.
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Threading.Scheduling.Scheduler.Throw(System.Exception)">
            <summary>
                If a task running on another thread or in a
                coroutine has thrown a exception use this
                function to throw it to the scheduler which
                will then rethrow it from the main thread.
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Threading.Scheduling.Scheduler.StopWaiting(SpaceEngine.Core.Threading.Tasks.IThreadedTask,System.Boolean)">
            <summary>
                Removes a task from the waiting queue and
                adds it to the scheduled queue were it will be run.
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Threading.Scheduling.Scheduler.Clear">
            <summary>
                Clear scheduler of all tasks. Scheduler must
                have no running tasks for it to be cleared.
            </summary>
        </member>
        <member name="T:SpaceEngine.Core.Threading.Tasks.IThreadedTask">
            <summary>
                Interface for a task.
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Threading.Tasks.IThreadedTask.RunTime">
            <summary>
                How long the task took to run in milliseconds.
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Threading.Tasks.IThreadedTask.IsThreaded">
            <summary>
                True if threaded.
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Threading.Tasks.IThreadedTask.Ran">
            <summary>
                True if the task has ran.
                Should be set to true in the tasks run function.
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Threading.Tasks.IThreadedTask.Done">
            <summary>
                True if the task is finished.
                Should be set to true in the tasks end function.
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Threading.Tasks.IThreadedTask.NoFinish">
            <summary>
                Set to true to skip the end function.
                This will immediately trigger any tasks
                waiting on this one to stop waiting.
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Threading.Tasks.IThreadedTask.Waiting">
            <summary>
                Is the task waiting on another task to finish.
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Threading.Tasks.IThreadedTask.RunOnStopWaiting">
            <summary>
                True if the tasks runs immediately after stop wait
                or gets queued as a scheduled task.
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Threading.Tasks.IThreadedTask.Started">
            <summary>
                True if the task has started.
                Should be set to true in the tasks start function
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Threading.Tasks.IThreadedTask.Cancelled">
            <summary>
                True if this task was scheduled but cancelled.
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Threading.Tasks.IThreadedTask.Scheduler">
            <summary>
                The scheduler that will run the task.
                Is set by the scheduler before running task.
                Is null until then.
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Threading.Tasks.IThreadedTask.Reset">
            <summary>
                Reset task to its starting conditions.
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Threading.Tasks.IThreadedTask.Start">
            <summary>
                Starts the task. Used to initialize anything
                that maybe needed before the task is run.
                Is always called from the main thread.
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Threading.Tasks.IThreadedTask.Run">
            <summary>
                Runs the task. If mainThread is true this will
                only be called from the main thread. If it is false the
                task will be run on any available thread.
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Threading.Tasks.IThreadedTask.End">
            <summary>
                Ends the task. Used to do any clean up when the task is
                finished. Is always called from the main thread.
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Threading.Tasks.IThreadedTask.Cancel">
            <summary>
                This function gets called on task if
                scheduler cancels tasks.
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Threading.Tasks.IThreadedTask.WaitOn(SpaceEngine.Core.Threading.Tasks.ThreadedTask)">
            <summary>
                Wait on task to finish before running.
                This task will be added to the scheduler waiting queue
                and will be added to the schedule queue was all tasks
                it is waiting on have finished.
            </summary>
        </member>
        <member name="T:SpaceEngine.Core.Threading.Tasks.TaskListener">
            <summary>
                Allows a task to listen on for when
                other tasks finish. When all tasks
                this task is listening to are finished
                the tasks StopWaiting function is called.
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Threading.Tasks.TaskListener.#ctor(SpaceEngine.Core.Threading.Tasks.ThreadedTask)">
            <summary>
                Create a new listener.
            </summary>
            <param name="task">The task that is listening.</param>
        </member>
        <member name="P:SpaceEngine.Core.Threading.Tasks.TaskListener.ListeningTask">
            <summary>
                The task that is listening.
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Threading.Tasks.TaskListener.Waiting">
            <summary>
                How many tasks the task is waiting on.
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Threading.Tasks.TaskListener.OnFinish">
            <summary>
                Called when any of the tasks this task is listening
                on have finished. Once waiting reaches 0 the task
                stops waiting.
            </summary>
        </member>
        <member name="T:SpaceEngine.Core.Threading.Tasks.ThreadedTask">
            <summary>
                A abstract task that implements the default behaviour of a task
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Threading.Tasks.ThreadedTask.m_lock">
            <summary>
                Lock for functions that maybe accessed by task running on another thread.
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Threading.Tasks.ThreadedTask.#ctor(System.Boolean)">
            <summary>
                Create a task.
            </summary>
            <param name="isThreaded">True if threaded</param>
        </member>
        <member name="P:SpaceEngine.Core.Threading.Tasks.ThreadedTask.Scheduler">
            <summary>
                The scheduler used to run this task
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Threading.Tasks.ThreadedTask.Listeners">
            <summary>
                A list of task listeners that are waiting
                on this task to finish running.
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Threading.Tasks.ThreadedTask.Listener">
            <summary>
                The listener for this task that can listen on another
                task to stop running.
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Threading.Tasks.ThreadedTask.RunTime">
            <summary>
                How long the task took to run in milliseconds.
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Threading.Tasks.ThreadedTask.IsThreaded">
            <summary>
                True if this task must be run on the main thread.
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Threading.Tasks.ThreadedTask.Done">
            <summary>
                True if the task has ran.
                Should be set to true in the tasks end function.
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Threading.Tasks.ThreadedTask.Ran">
            <summary>
                True if the task is finished.
                Should be set to true in the tasks run function.
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Threading.Tasks.ThreadedTask.NoFinish">
            <summary>
                Set to true to skip the end function.
                This will immediately trigger any tasks
                waiting on this one to stop waiting.
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Threading.Tasks.ThreadedTask.Waiting">
            <summary>
                Is the task waiting on another task to finish.
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Threading.Tasks.ThreadedTask.RunOnStopWaiting">
            <summary>
                True if the tasks runs immediately after stop wait
                or gets queued as a scheduled task.
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Threading.Tasks.ThreadedTask.Started">
            <summary>
                True if the task has started.
                Should be set to true in the tasks start function
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Threading.Tasks.ThreadedTask.Cancelled">
            <summary>
                True if the task has been cancelled.
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Threading.Tasks.ThreadedTask.Start">
            <summary>
                Starts the task. Used to initialize anything
                that maybe needed before the task is run.
                Is always called from the main thread.
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Threading.Tasks.ThreadedTask.Reset">
            <summary>
                Reset task to its starting conditions.
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Threading.Tasks.ThreadedTask.Run">
            <summary>
                Runs the task. If mainThread is true this will
                only be called from the main thread. If it is false the
                task will be run on any available thread.
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Threading.Tasks.ThreadedTask.End">
            <summary>
                Ends the task. Used to do any clean up when the task is
                finished. Is always called from the main thread.
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Threading.Tasks.ThreadedTask.Cancel">
            <summary>
                This function gets called on task if
                scheduler cancels tasks.
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Threading.Tasks.ThreadedTask.WaitOn(SpaceEngine.Core.Threading.Tasks.ThreadedTask)">
            <summary>
                Wait on task to finish before running.
                This task will be added to the scheduler waiting queue
                and will be added to the schedule queue when all tasks
                it is waiting on have finished.
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Threading.Tasks.ThreadedTask.FinishedRunning">
            <summary>
                Must be called at the end of the run function
                to notify the scheduler that the task has finished.
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Threading.Tasks.ThreadedTask.StopWaiting">
            <summary>
                The tasks that this task was waiting on to finish have
                now finished and it will now be run by the scheduler.
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Threading.Tasks.ThreadedTask.ToString">
            <summary>
                The task as a string.
            </summary>
        </member>
    </members>
</doc>
