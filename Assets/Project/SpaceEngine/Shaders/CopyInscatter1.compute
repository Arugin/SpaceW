/*
 * Author: Eric Bruneton
 * Modified and ported to Unity by Justin Hawkins 2014
 * Modified by Denis Ovchinnikov 2015-2018
 */
 
 // copies deltaS into S (line 5 in algorithm 4.1)

#pragma kernel CSMain

#include "SpaceAtmospherePreprocess.cginc"

int layer;

Texture3D<float4> deltaSRRead; 
Texture3D<float4> deltaSMRead;

RWTexture3D<float4> inscatterWrite;

[numthreads(NUM_THREADS, NUM_THREADS, 1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    float4 ray = deltaSRRead[uint3(id.xy, layer)]; 
    float4 mie = deltaSMRead[uint3(id.xy, layer)]; 
    
    // store only red component of single Mie scattering (cf. 'Angular precision') 
    inscatterWrite[uint3(id.xy, layer)] = float4(ray.rgb, mie.r);
}